diff --git a/node_modules/@greenwood/plugin-renderer-lit/src/execute-route-module.js b/node_modules/@greenwood/plugin-renderer-lit/src/execute-route-module.js
index 5e73f75..ae88202 100644
--- a/node_modules/@greenwood/plugin-renderer-lit/src/execute-route-module.js
+++ b/node_modules/@greenwood/plugin-renderer-lit/src/execute-route-module.js
@@ -1,25 +1,10 @@
-// this needs to come first
-import { render } from '@lit-labs/ssr/lib/render-with-global-dom-shim.js';
-import { Buffer } from 'buffer';
+import { render } from '@lit-labs/ssr';
+import { collectResult } from '@lit-labs/ssr/lib/render-result.js'
 import { html } from 'lit';
 import { unsafeHTML } from 'lit-html/directives/unsafe-html.js';
-import { Readable } from 'stream';
-
-async function streamToString (stream) {
-  const chunks = [];
-
-  for await (let chunk of stream) {
-    chunks.push(Buffer.from(chunk));
-  }
-
-  return Buffer.concat(chunks).toString('utf-8');
-}
-
-async function getTemplateResultString(template) {
-  return await streamToString(Readable.from(render(template)));
-}
 
 async function executeRouteModule({ moduleUrl, compilation, page, prerender, htmlContents, scripts }) {
+  await import('@lit-labs/ssr/lib/install-global-dom-shim.js');
   const data = {
     template: null,
     body: null,
@@ -35,31 +20,24 @@ async function executeRouteModule({ moduleUrl, compilation, page, prerender, htm
 
     const templateResult = html`${unsafeHTML(htmlContents)}`;
 
-    data.html = await getTemplateResultString(templateResult);
+    data.html = await collectResult(render(templateResult));
   } else {
     const module = await import(moduleUrl).then(module => module);
     const { getTemplate = null, getBody = null, getFrontmatter = null } = module;
 
-    if (module.default && module.tagName) {
-      const { tagName } = module;
-      const templateResult = html`
-        ${unsafeHTML(`<${tagName}></${tagName}>`)}
-      `;
-
-      data.body = await getTemplateResultString(templateResult);
-    } else if (getBody) {
+    if (getBody) {
       const templateResult = await getBody(compilation, page);
 
-      data.body = await getTemplateResultString(templateResult);
+      data.body = await collectResult(render(templateResult));
     }
 
     if (getTemplate) {
       const templateResult = await getTemplate(compilation, page);
 
-      data.template = await getTemplateResultString(templateResult);
+      data.template = await collectResult(render(templateResult));
     }
 
-    if (getFrontmatter) {
+    if (getFrontmatter) {s
       data.frontmatter = await getFrontmatter(compilation, page);
     }
   }
